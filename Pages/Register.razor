@page "/register"

@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<ChatContext> DbFactory


<div class="data-container register">
	<h2>Register</h2>

	<div class="input-box">
		<span class="icon"><ion-icon name="finger-print"></ion-icon></span>
		<input type="text" @bind="Name" required>
		<label>Name</label>
	</div>

	<div class="input-box">
		<span class="icon"><ion-icon name="image"></ion-icon></span>
		<input type="text" @bind="Image" required>
		<label>Image</label>
	</div>

	<div class="input-box">
		<span class="icon"><ion-icon name="person-circle"></ion-icon></span>
		<input type="text" @bind="UserName" required>
		<label>UserName</label>
	</div>

	<div class="input-box">
		<span class="icon"><ion-icon name="lock-closed"></ion-icon></span>
		<input type="password" @bind="Password" required>
		<label>Password</label>
	</div>
	<button class="btn" @onclick="RegistrarUsuario">Register</button>
</div>



@code {
	private string Name = "";

	private string UserName = "";

	private string Password = "";

	private string Image = "";

	private async void RegistrarUsuario()
	{
		if(Name != "")
		{
			using var context = DbFactory.CreateDbContext();

			if(context is not null && context.Users is not null)
			{
				var newUser = await context.Users
				.Where(u => u.UserName == UserName)
				.FirstOrDefaultAsync();

				if(newUser == null)
				{
					context.Users.Add(new User
					{
						Name = Name,
						Image = Image,
						UserName = UserName,
						Password = Password
					});


					try
					{
						await context.SaveChangesAsync();
					}
					catch(Exception ex)
					{
						Console.WriteLine(ex);
					}
				}
				else
				{
					Console.WriteLine("Este usuário já existe");
				}
			}
		}	
	}
}